# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  # Exclude generated files from analysis
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/*.config.dart"
    - "lib/generated_plugin_registrant.dart"
    - "lib/l10n/app_localizations*.dart"

  # Enable stricter type checking
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  # Configure errors and warnings
  errors:
    # Treat missing required parameters as errors
    missing_required_param: error
    # Treat missing returns as errors
    missing_return: error
    # Treat invalid assignments as errors
    invalid_assignment: error
    # Treat dead code as warnings
    dead_code: warning
    # Treat unused imports as warnings
    unused_import: warning
    # Treat unused local variables as info
    unused_local_variable: info

linter:
  rules:
    # Style rules
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_relative_imports: true
    prefer_spread_collections: true
    prefer_void_to_null: true

    # Code quality rules
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catching_errors: true
    avoid_empty_else: true
    avoid_field_initializers_in_const_classes: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_print: true
    avoid_redundant_argument_values: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null_for_void: true
    avoid_single_cascade_in_expression_statements: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true

    # Error prevention
    always_declare_return_types: true
    always_put_required_named_parameters_first: true
    always_specify_types: false # Can be too verbose, but useful for large teams
    annotate_overrides: true
    avoid_dynamic_calls: true
    cast_nullable_to_non_nullable: true
    close_sinks: true
    comment_references: true
    deprecated_consistency: true
    directives_ordering: true
    empty_catches: true
    empty_constructor_bodies: true
    exhaustive_cases: true
    hash_and_equals: true
    implementation_imports: true
    missing_whitespace_between_adjacent_strings: true
    no_logic_in_create_state: true
    package_names: true
    package_prefixed_library_names: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_interpolation_to_compose_strings: true
    prefer_iterable_whereType: true
    prefer_null_aware_operators: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    sized_box_for_whitespace: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    type_annotate_public_apis: true
    unawaited_futures: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_getters_setters: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_statements: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    use_build_context_synchronously: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_raw_strings: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true

    # Flutter specific rules
    avoid_web_libraries_in_flutter: true
    flutter_style_todos: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    secure_pubspec_urls: true
    sort_pub_dependencies: true

    # Disabled rules (uncomment to enable)
    # always_use_package_imports: true # Can be restrictive
    # public_member_api_docs: true # Useful for packages
    # lines_longer_than_80_chars: true # Modern screens can handle longer lines
