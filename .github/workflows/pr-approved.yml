name: 🔀 PR Approved

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [closed]

jobs:
  handle-approval:
    name: 🎯 Handle PR Approval
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved' && github.event.pull_request.draft == false

    steps:
    - name: 🎉 PR Approved Notification
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const review = context.payload.review;
          const reviewer = review.user.login;
          const author = pr.user.login;
          
          let message = `## 🎉 PR Approved!\n\n`;
          message += `**@${reviewer}** has approved this PR! 👍\n\n`;
          
          if (review.body) {
            message += `💬 **Review comment:**\n> ${review.body}\n\n`;
          }
          
          message += `🔄 **Status:** Ready to merge\n`;
          message += `🤖 **Auto-merge:** Enabled (will merge automatically if all checks pass)\n\n`;
          message += `Thanks @${author} for the contribution! 🚀`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });

  handle-merge:
    name: 🎊 Handle Successful Merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: 🎊 Merge Success Notification
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const author = pr.user.login;
          const mergedBy = pr.merged_by ? pr.merged_by.login : 'unknown';
          
          console.log(`🎊 PR #${pr.number} successfully merged!`);
          console.log(`📝 Title: ${pr.title}`);
          console.log(`👤 Author: @${author}`);
          console.log(`🔀 Merged by: @${mergedBy}`);
          console.log(`🌿 From: ${pr.head.ref} → ${pr.base.ref}`);
          
          // Create a celebration comment
          const message = `## 🎊 Successfully Merged!\n\n` +
            `This PR has been successfully merged into \`${pr.base.ref}\`! 🚀\n\n` +
            `🎯 **Merged:** ${pr.title}\n` +
            `👤 **Author:** @${author}\n` +
            `🔀 **Merged by:** @${mergedBy}\n` +
            `🌿 **Branch:** \`${pr.head.ref}\` → \`${pr.base.ref}\`\n\n` +
            `✨ Great work team! The changes are now live on the main branch.\n\n` +
            `🔄 **Next steps:**\n` +
            `- Build workflows will run automatically\n` +
            `- Changes will be available in the next release\n` +
            `- Branch \`${pr.head.ref}\` can be safely deleted`;
          
          // We can't comment on closed PRs, so we'll just log the success
          console.log('📝 Merge notification prepared (PR is closed, comment not posted)');

  cleanup-branch:
    name: 🧹 Cleanup Feature Branch
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.head.repo.full_name == github.repository

    steps:
    - name: 🧹 Delete merged branch
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const branchName = pr.head.ref;
          
          // Don't delete main, develop, or release branches
          const protectedBranches = ['main', 'master', 'develop', 'staging', 'production'];
          if (protectedBranches.includes(branchName)) {
            console.log(`🛡️ Skipping deletion of protected branch: ${branchName}`);
            return;
          }
          
          try {
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branchName}`
            });
            
            console.log(`🗑️ Successfully deleted branch: ${branchName}`);
          } catch (error) {
            console.log(`⚠️ Could not delete branch ${branchName}: ${error.message}`);
          }
